import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from tetrio_parsing.calculate_attack import ATTACK_TABLE, ATTACK_TABLE_MAX_COMBO
# downstack into PC end test
'''board= [
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ','x',' ',' ',' ',' ',' '],  
    [' ',' ',' ','x','x',' ',' ',' ',' ',' '],
    ['x','x','x','x','x',' ',' ',' ',' ',' '],
    ['x','x','x','x','x','x',' ',' ','x','x'],
    ['x','x','x','x','x','x',' ',' ','x','x'],
    [' ','x','x','x','x','x','x','x','x','x'],
    ['x','x','x','x','x','x','x','x','x',' '],
    ]

queue = ['T','S','O','L','Z','J','I'] # no need to use hold'''
# 3 combo into pc
'''custom_board= [
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '], 
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],  
    [' ',' ',' ','x',' ',' ',' ',' ',' ',' '],
    [' ',' ','x','x','x','x','x','x',' ',' '],
    [' ',' ','x','x','x','x','x','x','x','x'],
    [' ','x','x','x','x','x','x','x','x','x'],
    ]
queue = ["I","J","O","I"]'''
custom_board= [
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '], 
    [' ',' ',' ',' ',' ',' ',' ',' ',' ',' '], 
    ['x',' ',' ',' ',' ','x','x','x','x','x'],
    ['x',' ',' ',' ',' ','x','x','x','x','x'], 
    ['x',' ',' ','x','x','x','x','x','x','x'],  
    ['x','x',' ','x','x','x','x','x','x','x'],
    ['x','x',' ','x','x','x','x','x','x','x'],
    ]
import numpy as np # move up asp
custom_board = np.array(custom_board)
queue = ['I','I','L']
from board_operations.stack_checking import *
#a = height_difference(custom_board) # it doesnt work with np array now, idk how change tbh
#print(a)
#next testcase i wanna try is PC end with 2  o pieces, so it should be 2 double clears into p
from bruteforcing import find_best_placement
#best_move, total_attack = find_best_placement(custom_board, queue, 0)
#print(f"best move {best_move}")
#print(f"total attack after sequence: {total_attack}")


